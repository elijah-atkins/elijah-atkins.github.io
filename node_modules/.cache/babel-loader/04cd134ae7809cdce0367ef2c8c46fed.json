{"ast":null,"code":"import _defineProperty from\"/Users/elijahatkins/Elijah/elijah-atkins.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/elijahatkins/Elijah/elijah-atkins.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/elijahatkins/Elijah/elijah-atkins.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _this=this;import React,{useState,useEffect}from\"react\";import*as yup from\"yup\";// DOCS: https://github.com/jquense/yup\nimport*as emailjs from\"emailjs-com\";var ContactForm=function ContactForm(){var blankForm={name:\"\",email:\"\",message:\"\"};var _useState=useState(blankForm),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(blankForm),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isButtonDisabled=_useState6[0],setIsButtonDisabled=_useState6[1];var formSchema=yup.object().shape({name:yup.string().required(\"name is a required field\"),email:yup.string().email(\"must be a valid email address\").required(\"email is a required field\"),message:yup.string().required(\"please enter a message\")});// inline validation, validating one key/value pair\nvar validateChange=function validateChange(e){yup.reach(formSchema,e.target.name)// get the value out of schema at key \"e.target.name\" --> \"name=\"\n.validate(e.target.value)// value in input\n.then(function(valid){// if passing validation, clear any error\nsetErrors(_objectSpread(_objectSpread({},errors),{},_defineProperty({},e.target.name,\"\")));}).catch(function(err){// if failing validation, set error in state\nconsole.log(\"error!\",err);setErrors(_objectSpread(_objectSpread({},errors),{},_defineProperty({},e.target.name,err.errors[0])));});};useEffect(function(){formSchema.isValid(message).then(function(valid){setIsButtonDisabled(!valid);});},[message,formSchema]);var handleSubmit=function handleSubmit(e){e.preventDefault();var templateParams={from_name:message.email,to_name:\"elijahorama@gmail.com\",subject:message.name,message_html:message.message};emailjs.send(\"gmail\",\"template_jD14FVvB\",templateParams,\"user_9uGgyjy7pkRZkqKCGG2wK\").then(function(result){console.log('Success!',result.text);},function(error){console.log('Failed...',error.text);});setMessage(blankForm);};var inputChange=function inputChange(e){e.persist();var newMessage=_objectSpread(_objectSpread({},message),{},_defineProperty({},e.target.name,e.target.value));validateChange(e);// for each change in input, do inline validation\nsetMessage(newMessage);// update state with new data\n};return/*#__PURE__*/React.createElement(\"div\",{className:\"project-card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"social\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Contact Elijah\"),/*#__PURE__*/React.createElement(\"form\",{id:\"contact-form\",onSubmit:handleSubmit.bind(_this),method:\"POST\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{id:\"name\",name:\"name\",type:\"text\",onChange:inputChange,value:message.name,className:\"form-control\"}),errors.name.length>0?/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},errors.name):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"exampleInputEmail1\"},\"Email address\"),/*#__PURE__*/React.createElement(\"input\",{id:\"email\",name:\"email\",type:\"email\",onChange:inputChange,value:message.email,className:\"form-control\",\"aria-describedby\":\"emailHelp\"}),errors.email.length>0?/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},errors.email):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"message\"},\"Message\"),/*#__PURE__*/React.createElement(\"textarea\",{id:\"message\",name:\"message\",onChange:inputChange,value:message.message,className:\"form-control-tall\",rows:\"5\"}),errors.message.length>0?/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},errors.message):null),/*#__PURE__*/React.createElement(\"div\",{className:\"contact-button\"},/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:isButtonDisabled},\"Submit\")))));};export default ContactForm;","map":{"version":3,"sources":["/Users/elijahatkins/Elijah/elijah-atkins.github.io/src/components/ContactForm.jsx"],"names":["React","useState","useEffect","yup","emailjs","ContactForm","blankForm","name","email","message","setMessage","errors","setErrors","isButtonDisabled","setIsButtonDisabled","formSchema","object","shape","string","required","validateChange","e","reach","target","validate","value","then","valid","catch","err","console","log","isValid","handleSubmit","preventDefault","templateParams","from_name","to_name","subject","message_html","send","result","text","error","inputChange","persist","newMessage","bind","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\"; // DOCS: https://github.com/jquense/yup\nimport * as emailjs from \"emailjs-com\";\n\nconst ContactForm = () => {\n  const blankForm = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  };\n  const [message, setMessage] = useState(blankForm);\n  const [errors, setErrors] = useState(blankForm);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n  const formSchema = yup.object().shape({\n    name: yup.string().required(\"name is a required field\"),\n    email: yup\n      .string()\n      .email(\"must be a valid email address\")\n      .required(\"email is a required field\"),\n    message: yup.string().required(\"please enter a message\"),\n  });\n\n  // inline validation, validating one key/value pair\n  const validateChange = (e) => {\n    yup\n      .reach(formSchema, e.target.name) // get the value out of schema at key \"e.target.name\" --> \"name=\"\n      .validate(e.target.value) // value in input\n      .then((valid) => {\n        // if passing validation, clear any error\n        setErrors({ ...errors, [e.target.name]: \"\" });\n      })\n      .catch((err) => {\n        // if failing validation, set error in state\n        console.log(\"error!\", err);\n        setErrors({ ...errors, [e.target.name]: err.errors[0] });\n      });\n  };\n\n  useEffect(() => {\n    formSchema.isValid(message).then((valid) => {\n      setIsButtonDisabled(!valid);\n    });\n  }, [message, formSchema]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let templateParams = {\n      from_name: message.email,\n      to_name: \"elijahorama@gmail.com\",\n      subject: message.name,\n      message_html: message.message,\n    };\n\n    emailjs\n      .send(\n        \"gmail\",\n        \"template_jD14FVvB\",\n        templateParams,\n        \"user_9uGgyjy7pkRZkqKCGG2wK\"\n      )\n      .then(\n        (result) => {\n          console.log('Success!',result.text);\n        },\n        (error) => {\n          console.log('Failed...',error.text);\n        }\n      );\n\n    setMessage(blankForm);\n  };\n\n  const inputChange = (e) => {\n    e.persist();\n    const newMessage = { ...message, [e.target.name]: e.target.value };\n    validateChange(e); // for each change in input, do inline validation\n    setMessage(newMessage); // update state with new data\n  };\n\n  return (\n    <div className=\"project-card\">\n      <div className=\"social\">\n        <h1>Contact Elijah</h1>\n\n        <form\n          id=\"contact-form\"\n          onSubmit={handleSubmit.bind(this)}\n          method=\"POST\"\n        >\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Name</label>\n            <input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              onChange={inputChange}\n              value={message.name}\n              className=\"form-control\"\n            />\n            {errors.name.length > 0 ? (\n              <p className=\"error\">{errors.name}</p>\n            ) : null}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputEmail1\">Email address</label>\n            <input\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={inputChange}\n              value={message.email}\n              className=\"form-control\"\n              aria-describedby=\"emailHelp\"\n            />\n            {errors.email.length > 0 ? (\n              <p className=\"error\">{errors.email}</p>\n            ) : null}\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"message\">Message</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              onChange={inputChange}\n              value={message.message}\n              className=\"form-control-tall\"\n              rows=\"5\"\n            ></textarea>\n            {errors.message.length > 0 ? (\n              <p className=\"error\">{errors.message}</p>\n            ) : null}\n          </div>\n          <div className=\"contact-button\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              disabled={isButtonDisabled}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}