{"ast":null,"code":"var _jsxFileName = \"/Users/elijahatkins/Elijah/elijah-atkins.github.io/src/components/ProjectSearch.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport ProjectCard from './ProjectCard';\nimport { rubberBand } from 'react-animations';\n\nconst ProjectSearch = ({\n  projects\n}) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const Bounce = styled.div`animation: 400ms ${keyframes`${rubberBand}`} ease`;\n  useEffect(() => {\n    // map transforms [].length => a new type of data at the same length\n    // find reads an expression and then returns the first value that that expression is true\n    // filter reads an expression and then returns an [] with values where expression was true\n    // reduce\n    const newResults = projects.filter(project => {\n      return project.title.toLowerCase().includes(searchTerm.toLowerCase().trim()) || project.description.toLowerCase().includes(searchTerm.toLowerCase().trim());\n    });\n    setSearchResults(newResults);\n  }, [searchTerm]);\n\n  const handleChange = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"search\",\n    className: \"searchInput\",\n    type: \"text\",\n    name: \"search\",\n    placeholder: \"Search\",\n    value: searchTerm,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"searchButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"material-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"search\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, searchResults.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 69\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 99\n    }\n  }, \"No Content found. Please try searching for something else!\"))) : searchResults.map(project => {\n    return /*#__PURE__*/React.createElement(ProjectCard, {\n      project: project,\n      key: project.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    });\n  })));\n};\n\nexport default ProjectSearch;","map":{"version":3,"sources":["/Users/elijahatkins/Elijah/elijah-atkins.github.io/src/components/ProjectSearch.jsx"],"names":["React","useState","useEffect","ProjectCard","rubberBand","ProjectSearch","projects","searchTerm","setSearchTerm","searchResults","setSearchResults","Bounce","styled","div","keyframes","newResults","filter","project","title","toLowerCase","includes","trim","description","handleChange","e","target","value","length","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMU,MAAM,GAAGC,MAAM,CAACC,GAAI,oBAAmBC,SAAU,GAAEV,UAAW,EAAE,OAAtE;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA,UAAMa,UAAU,GAAGT,QAAQ,CAACU,MAAT,CAAgBC,OAAO,IAAI;AAC5C,aAAOA,OAAO,CAACC,KAAR,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCb,UAAU,CAACY,WAAX,GAAyBE,IAAzB,EAArC,KAAyEJ,OAAO,CAACK,WAAR,CAAoBH,WAApB,GAAkCC,QAAlC,CAA2Cb,UAAU,CAACY,WAAX,GAAyBE,IAAzB,EAA3C,CAAhF;AACD,KAFkB,CAAnB;AAIAX,IAAAA,gBAAgB,CAACK,UAAD,CAAhB;AACD,GAVM,EAUJ,CAACR,UAAD,CAVI,CAAT;;AAaA,QAAMgB,YAAY,GAAGC,CAAC,IAAI;AACtBhB,IAAAA,aAAa,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFH;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,EAAE,EAAC,QADH;AAEA,IAAA,SAAS,EAAC,aAFV;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,IAAI,EAAC,QAJL;AAKA,IAAA,WAAW,EAAC,QALZ;AAMA,IAAA,KAAK,EAAEnB,UANP;AAOA,IAAA,QAAQ,EAAEgB,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAWI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAXJ,CADA,eAmBA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCd,aAAa,CAACkB,MAAd,KAAyB,CAAzB,gBAA6B;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAA9B,CAA9B,CAA7B,GAA2KlB,aAAa,CAACmB,GAAd,CAAkBX,OAAO,IAAI;AACrM,wBAAQ,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEA,OAAtB;AAA+B,MAAA,GAAG,EAAEA,OAAO,CAACY,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH,GAF2K,CAD5K,CAnBA,CADJ;AA2BH,CAlDD;;AAoDA,eAAexB,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ProjectCard from './ProjectCard';\nimport { rubberBand } from 'react-animations';\n\n\nconst ProjectSearch = ({ projects }) => {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    const Bounce = styled.div`animation: 400ms ${keyframes`${rubberBand}`} ease`;\n\n    useEffect(() => {\n        // map transforms [].length => a new type of data at the same length\n        // find reads an expression and then returns the first value that that expression is true\n        // filter reads an expression and then returns an [] with values where expression was true\n        // reduce\n        const newResults = projects.filter(project => {\n          return project.title.toLowerCase().includes(searchTerm.toLowerCase().trim()) || project.description.toLowerCase().includes(searchTerm.toLowerCase().trim());\n        });\n    \n        setSearchResults(newResults);\n      }, [searchTerm]);\n\n\n    const handleChange = e => {\n        setSearchTerm(e.target.value);\n      };\n\n    return (\n        <div className=\"project-search\">\n        <div className=\"searchBox\">\n            <input \n            id=\"search\"\n            className=\"searchInput\" \n            type=\"text\" \n            name=\"search\" \n            placeholder=\"Search\" \n            value={searchTerm}\n            onChange={handleChange}\n            />\n\n            <button className=\"searchButton\">\n                <i className=\"material-icons\">\n                    search\n                </i>\n\n            </button>\n        </div>\n        <div className=\"project-grid\">\n        {searchResults.length === 0 ? <div className=\"project-card\"><div className=\"project-item\"><h1>No Content found. Please try searching for something else!</h1></div></div> : searchResults.map(project => {\n            return (<ProjectCard project={project} key={project.id}/>)\n        }) }\n        </div>\n        </div>\n    )\n}\n\nexport default ProjectSearch"]},"metadata":{},"sourceType":"module"}