{"ast":null,"code":"import _defineProperty from\"/Users/elijahatkins/Elijah/elijah-atkins.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/elijahatkins/Elijah/elijah-atkins.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/elijahatkins/Elijah/elijah-atkins.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _this=this;import React,{useState,useEffect}from\"react\";import*as yup from\"yup\";// DOCS: https://github.com/jquense/yup\nvar ContactForm=function ContactForm(){var blankForm={name:\"\",email:\"\",message:\"\"};var _useState=useState(blankForm),_useState2=_slicedToArray(_useState,2),message=_useState2[0],setMessage=_useState2[1];var _useState3=useState(blankForm),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isButtonDisabled=_useState6[0],setIsButtonDisabled=_useState6[1];var formSchema=yup.object().shape({name:yup.string().required(\"name is a required field\"),email:yup.string().email(\"must be a valid email address\").required(\"email is a required field\"),message:yup.string().required(\"please enter a message\")});// inline validation, validating one key/value pair\nvar validateChange=function validateChange(e){yup.reach(formSchema,e.target.name)// get the value out of schema at key \"e.target.name\" --> \"name=\"\n.validate(e.target.value)// value in input\n.then(function(valid){// if passing validation, clear any error\nsetErrors(_objectSpread(_objectSpread({},errors),{},_defineProperty({},e.target.name,\"\")));}).catch(function(err){// if failing validation, set error in state\nconsole.log(\"error!\",err);setErrors(_objectSpread(_objectSpread({},errors),{},_defineProperty({},e.target.name,err.errors[0])));});};useEffect(function(){formSchema.isValid(message).then(function(valid){setIsButtonDisabled(!valid);});},[message,formSchema]);var handleSubmit=function handleSubmit(e){e.preventDefault();console.log(JSON.stringify(message));fetch('http://localhost:3002/send',{method:\"POST\",body:JSON.stringify(message),headers:{'Accept':'application/json','Content-Type':'application/json'}}).then(function(response){return response.json();}).then(function(response){if(response.status==='success'){alert(\"Message Sent.\");setMessage(blankForm);}else if(response.status==='fail'){alert(\"Message failed to send.\");}});};var inputChange=function inputChange(e){e.persist();var newMessage=_objectSpread(_objectSpread({},message),{},_defineProperty({},e.target.name,e.target.value));validateChange(e);// for each change in input, do inline validation\nsetMessage(newMessage);// update state with new data\n};return/*#__PURE__*/React.createElement(\"div\",{className:\"project-card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"social\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Contact ---Under Construction--\"),/*#__PURE__*/React.createElement(\"form\",{id:\"contact-form\",onSubmit:handleSubmit.bind(_this),method:\"POST\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"name\"},\"Name\"),/*#__PURE__*/React.createElement(\"input\",{id:\"name\",name:\"name\",type:\"text\",onChange:inputChange,value:message.name,className:\"form-control\"}),errors.name.length>0?/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},errors.name):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"exampleInputEmail1\"},\"Email address\"),/*#__PURE__*/React.createElement(\"input\",{id:\"email\",name:\"email\",type:\"email\",onChange:inputChange,value:message.email,className:\"form-control\",\"aria-describedby\":\"emailHelp\"}),errors.email.length>0?/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},errors.email):null),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"message\"},\"Message\"),/*#__PURE__*/React.createElement(\"textarea\",{id:\"message\",name:\"message\",onChange:inputChange,value:message.message,className:\"form-control-tall\",rows:\"5\"}),errors.message.length>0?/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},errors.message):null),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:isButtonDisabled},\"Submit\"))));};export default ContactForm;","map":{"version":3,"sources":["/Users/elijahatkins/Elijah/elijah-atkins.github.io/src/components/ContactForm.jsx"],"names":["React","useState","useEffect","yup","ContactForm","blankForm","name","email","message","setMessage","errors","setErrors","isButtonDisabled","setIsButtonDisabled","formSchema","object","shape","string","required","validateChange","e","reach","target","validate","value","then","valid","catch","err","console","log","isValid","handleSubmit","preventDefault","JSON","stringify","fetch","method","body","headers","response","json","status","alert","inputChange","persist","newMessage","bind","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as yup from \"yup\"; // DOCS: https://github.com/jquense/yup\n\nconst ContactForm = () => {\n    const blankForm = {\n        name: \"\",\n        email: \"\",\n        message: \"\",\n    };\n    const [message, setMessage] = useState(blankForm);\n    const [errors, setErrors] = useState(blankForm);\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n\n    const formSchema = yup.object().shape({\n        name: yup.string().required(\"name is a required field\"),\n        email: yup.string().email(\"must be a valid email address\").required(\"email is a required field\"),\n        message: yup.string().required(\"please enter a message\"),\n    });\n\n    // inline validation, validating one key/value pair\n    const validateChange = e => {\n        yup\n            .reach(formSchema, e.target.name) // get the value out of schema at key \"e.target.name\" --> \"name=\"\n            .validate(e.target.value) // value in input\n            .then(valid => {\n                // if passing validation, clear any error\n                setErrors({ ...errors, [e.target.name]: \"\" });\n            })\n            .catch(err => {\n                // if failing validation, set error in state\n                console.log(\"error!\", err);\n                setErrors({ ...errors, [e.target.name]: err.errors[0] });\n            });\n    };\n\n    useEffect(() => {\n        formSchema.isValid(message).then(valid => {\n            setIsButtonDisabled(!valid);\n        });\n    }, [message, formSchema]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(JSON.stringify(message))\n        fetch('http://localhost:3002/send',{\n            method: \"POST\",\n            body: JSON.stringify(message),\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n          }).then(\n            (response) => (response.json())\n           ).then((response)=>{\n          if (response.status === 'success'){\n            alert(\"Message Sent.\"); \n            setMessage(blankForm);\n          }else if(response.status === 'fail'){\n            alert(\"Message failed to send.\")\n          }\n        })\n        \n    };\n\n    const inputChange = (e) => {\n        e.persist();\n        const newMessage = { ...message, [e.target.name]: e.target.value };\n        validateChange(e); // for each change in input, do inline validation\n        setMessage(newMessage); // update state with new data\n    };\n\n\nreturn (\n    <div className=\"project-card\">\n        <div className=\"social\">\n            <h1>Contact ---Under Construction--</h1>\n            <form\n                id=\"contact-form\"\n                onSubmit={handleSubmit.bind(this)}\n                method=\"POST\"\n            >\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                        id=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        onChange={inputChange}\n                        value={message.name}\n                        className=\"form-control\"\n                    />\n                    {errors.name.length > 0 ? <p className=\"error\">{errors.name}</p> : null}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        onChange={inputChange}\n                        value={message.email}\n                        className=\"form-control\"\n                        aria-describedby=\"emailHelp\"\n                    />\n                    {errors.email.length > 0 ? <p className=\"error\">{errors.email}</p> : null}\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"message\">Message</label>\n                    <textarea\n                        id=\"message\"\n                        name=\"message\"\n                        onChange={inputChange}\n                        value={message.message}\n                        className=\"form-control-tall\"\n                        rows=\"5\"\n                    ></textarea>\n                    {errors.message.length > 0 ? <p className=\"error\">{errors.message}</p> : null}\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={isButtonDisabled}>\n                    Submit\n          </button>\n            </form>\n        </div>\n    </div>\n);\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}